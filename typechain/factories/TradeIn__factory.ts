/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TradeIn, TradeInInterface } from "../TradeIn";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "assetToSwap",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "Swap",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowedAssets",
    outputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isAllowed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowedRouters",
    outputs: [
      {
        internalType: "uint256",
        name: "routerType",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isAllowed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "asset",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isAllowed",
        type: "bool",
      },
    ],
    name: "changeAllowedAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "routerType",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isAllowed",
        type: "bool",
      },
    ],
    name: "changeAllowedRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newFeePercent_",
        type: "uint256",
      },
    ],
    name: "changeFeePercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newFeeReceiver_",
        type: "address",
      },
    ],
    name: "changeFeeReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeReceiver",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset_",
        type: "address",
      },
      {
        internalType: "address",
        name: "feeReceiver_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "feePercent_",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetToSwap",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tolerance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611965806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806387c493b111610097578063c646aee211610066578063c646aee214610222578063d004f0f714610261578063dce52dfa14610274578063f2fde38b1461027d576100f5565b806387c493b1146101975780638da5cb5b146101aa578063a4c1cccb146101bb578063b3f006741461020f576100f5565b8063567ebd50116100d3578063567ebd5014610152578063715018a6146101655780637c08b9641461016d5780637fd6f15c14610180576100f5565b80631794bb3c146100fa57806334eddf3e1461010f57806338d52e0f14610122575b600080fd5b61010d61010836600461162e565b610290565b005b61010d61011d3660046117aa565b610396565b606554610135906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61010d610160366004611699565b61046d565b61010d61055a565b61010d61017b3660046115a5565b6105c0565b61018960675481565b604051908152602001610149565b61010d6101a53660046115e4565b610722565b6033546001600160a01b0316610135565b6101f06101c93660046115a5565b6069602052600090815260409020546001600160a01b03811690600160a01b900460ff1682565b604080516001600160a01b039093168352901515602083015201610149565b606654610135906001600160a01b031681565b61024c6102303660046115a5565b606a602052600090815260409020805460019091015460ff1682565b60408051928352901515602083015201610149565b61010d61026f36600461166e565b610924565b61018960685481565b61010d61028b3660046115a5565b610dad565b600054610100900460ff16806102a9575060005460ff16155b6103115760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b600054610100900460ff1615801561033c576000805460ff1961ff0019909116610100171660011790555b610344610e8f565b606580546001600160a01b038087166001600160a01b03199283161790925560668054928616929091169190911790556067829055604b6068558015610390576000805461ff00191690555b50505050565b6033546001600160a01b031633146103f05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610308565b6127108111156104685760405162461bcd60e51b815260206004820152602f60248201527f5472616465496e3a2056616c75652063616e6e6f74206265206d6f726520746860448201527f616e2031303025202831303030302900000000000000000000000000000000006064820152608401610308565b606755565b6033546001600160a01b031633146104c75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610308565b6001600160a01b0383166105295760405162461bcd60e51b8152602060048201526024808201527f5472616465496e3a205a65726f2061646472657373206973206e6f7420616c6c6044820152631bddd95960e21b6064820152608401610308565b6001600160a01b03929092166000908152606a60205260409020908155600101805460ff1916911515919091179055565b6033546001600160a01b031633146105b45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610308565b6105be6000610f5a565b565b6033546001600160a01b0316331461061a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610308565b6066546001600160a01b038281169116141561069e5760405162461bcd60e51b815260206004820152603360248201527f5472616465496e3a2054686973206164647265737320686173206265656e206160448201527f6c726561647920666565207265636569766572000000000000000000000000006064820152608401610308565b6001600160a01b0381166107005760405162461bcd60e51b8152602060048201526024808201527f5472616465496e3a205a65726f2061646472657373206973206e6f7420616c6c6044820152631bddd95960e21b6064820152608401610308565b606680546001600160a01b0319166001600160a01b0392909216919091179055565b6033546001600160a01b0316331461077c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610308565b6001600160a01b0383166107de5760405162461bcd60e51b8152602060048201526024808201527f5472616465496e3a205a65726f2061646472657373206973206e6f7420616c6c6044820152631bddd95960e21b6064820152608401610308565b6001600160a01b0382166000908152606a602052604090206001015460ff166108495760405162461bcd60e51b815260206004820152601e60248201527f5472616465496e3a20526f75746572206973206e6f7420616c6c6f77656400006044820152606401610308565b6001600160a01b038381166000818152606960205260409081902080546001600160a01b0319169386169384177fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b861515021790555163095ea7b360e01b815260048101929092526a084595161401484a00000060248301529063095ea7b390604401602060405180830381600087803b1580156108ec57600080fd5b505af1158015610900573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610390919061178e565b6001600160a01b038216600090815260696020526040902054600160a01b900460ff166109935760405162461bcd60e51b815260206004820152601d60248201527f5472616465496e3a204173736574206973206e6f7420616c6c6f7765640000006044820152606401610308565b600081116109ef5760405162461bcd60e51b815260206004820152602360248201527f5472616465496e3a205a65726f20616d6f756e74206973206e6f7420616c6c6f6044820152621dd95960ea1b6064820152608401610308565b6040516323b872dd60e01b8152336004820152306024820152604481018290526001600160a01b038316906323b872dd90606401602060405180830381600087803b158015610a3d57600080fd5b505af1158015610a51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a75919061178e565b506065546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b158015610aba57600080fd5b505afa158015610ace573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af291906117c2565b6001600160a01b03808516600090815260696020908152604080832054909316808352606a90915291902054919250906001811415610b3657610b36858386610fac565b8060021415610b4a57610b4a85838661118f565b6065546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b158015610b8e57600080fd5b505afa158015610ba2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc691906117c2565b90506000610bd485836118f2565b9050600061271060675483610be991906118d3565b610bf391906118b3565b6065549091506001600160a01b031663a9059cbb33610c1284866118f2565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b158015610c7057600080fd5b505af1158015610c84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca8919061178e565b5060655460665460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810184905291169063a9059cbb90604401602060405180830381600087803b158015610cf957600080fd5b505af1158015610d0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d31919061178e565b507fd6d34547c69c5ee3d2667625c188acf1006abb93e0ee7cf03925c67cf77604133389878a85610d6281896118f2565b604080516001600160a01b039788168152958716602087015293909516928401929092526060830152608082015260a081019190915260c00160405180910390a15050505050505050565b6033546001600160a01b03163314610e075760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610308565b6001600160a01b038116610e835760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610308565b610e8c81610f5a565b50565b600054610100900460ff1680610ea8575060005460ff16155b610f0b5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610308565b600054610100900460ff16158015610f36576000805460ff1961ff0019909116610100171660011790555b610f3e61143b565b610f466114f5565b8015610e8c576000805461ff001916905550565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008290506000816001600160a01b0316634aa4a4fc6040518163ffffffff1660e01b815260040160206040518083038186803b158015610fec57600080fd5b505afa158015611000573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102491906115c8565b604080516003808252608082019092529192506000919060208201606080368337019050509050858160008151811061106d57634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b03168152505081816001815181106110af57634e487b7160e01b600052603260045260246000fd5b6001600160a01b0392831660209182029290920101526065548251911690829060029081106110ee57634e487b7160e01b600052603260045260246000fd5b6001600160a01b03928316602091820292909201015260405163472b43f360e01b81529084169063472b43f3906111309087906000908690309060040161183e565b600060405180830381600087803b15801561114a57600080fd5b505af115801561115e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261118691908101906116cf565b50505050505050565b60008290506000816001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b1580156111cf57600080fd5b505afa1580156111e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120791906115c8565b604080516003808252608082019092529192506000919060208201606080368337019050509050858160008151811061125057634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b031681525050818160018151811061129257634e487b7160e01b600052603260045260246000fd5b6001600160a01b0392831660209182029290920101526065548251911690829060029081106112d157634e487b7160e01b600052603260045260246000fd5b6001600160a01b03928316602091820292909201015260405163d06ca61f60e01b815260009185169063d06ca61f90611310908890869060040161181d565b60006040518083038186803b15801561132857600080fd5b505afa15801561133c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261136491908101906116cf565b9050836001600160a01b03166338ed17398660646068548560028151811061139c57634e487b7160e01b600052603260045260246000fd5b60200260200101516113ae91906118d3565b6113b891906118b3565b8530426040518663ffffffff1660e01b81526004016113db959493929190611877565b600060405180830381600087803b1580156113f557600080fd5b505af1158015611409573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261143191908101906116cf565b5050505050505050565b600054610100900460ff1680611454575060005460ff16155b6114b75760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610308565b600054610100900460ff16158015610f46576000805460ff1961ff0019909116610100171660011790558015610e8c576000805461ff001916905550565b600054610100900460ff168061150e575060005460ff16155b6115715760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610308565b600054610100900460ff1615801561159c576000805460ff1961ff0019909116610100171660011790555b610f4633610f5a565b6000602082840312156115b6578081fd5b81356115c181611935565b9392505050565b6000602082840312156115d9578081fd5b81516115c181611935565b6000806000606084860312156115f8578182fd5b833561160381611935565b9250602084013561161381611935565b915060408401356116238161194a565b809150509250925092565b600080600060608486031215611642578283fd5b833561164d81611935565b9250602084013561165d81611935565b929592945050506040919091013590565b60008060408385031215611680578182fd5b823561168b81611935565b946020939093013593505050565b6000806000606084860312156116ad578283fd5b83356116b881611935565b92506020840135915060408401356116238161194a565b600060208083850312156116e1578182fd5b825167ffffffffffffffff808211156116f8578384fd5b818501915085601f83011261170b578384fd5b81518181111561171d5761171d61191f565b838102604051601f19603f830116810181811085821117156117415761174161191f565b604052828152858101935084860182860187018a101561175f578788fd5b8795505b83861015611781578051855260019590950194938601938601611763565b5098975050505050505050565b60006020828403121561179f578081fd5b81516115c18161194a565b6000602082840312156117bb578081fd5b5035919050565b6000602082840312156117d3578081fd5b5051919050565b6000815180845260208085019450808401835b838110156118125781516001600160a01b0316875295820195908201906001016117ed565b509495945050505050565b60008382526040602083015261183660408301846117da565b949350505050565b60008582528460208301526080604083015261185d60808301856117da565b90506001600160a01b038316606083015295945050505050565b600086825285602083015260a0604083015261189660a08301866117da565b6001600160a01b0394909416606083015250608001529392505050565b6000826118ce57634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156118ed576118ed611909565b500290565b60008282101561190457611904611909565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610e8c57600080fd5b8015158114610e8c57600080fdfea164736f6c6343000802000a";

export class TradeIn__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TradeIn> {
    return super.deploy(overrides || {}) as Promise<TradeIn>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TradeIn {
    return super.attach(address) as TradeIn;
  }
  connect(signer: Signer): TradeIn__factory {
    return super.connect(signer) as TradeIn__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TradeInInterface {
    return new utils.Interface(_abi) as TradeInInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TradeIn {
    return new Contract(address, _abi, signerOrProvider) as TradeIn;
  }
}
